---
apiVersion: v1
kind: ConfigMap
metadata:
  name: vault-configure-config
data:
  gcp-enable.json: |
    {
      "type": "gcp"
    }

  gcp-config.json: |
    {
      "ttl": "15m",
      "max_ttl": "15m"
    }

  terraform-roleset.json: |
    {
      "secret_type": "service_account_key",
      "project": "${tf_state_project_id}",
      "bindings": "${tf_state_bindings}"
    }

---
apiVersion: batch/v1
kind: Job
metadata:
  name: vault-configure
spec:
  template:
    spec:
      volumes:
      - name: vault-tls
        secret:
          secretName: vault-tls

      - name: config-volume
        configMap:
          name: vault-configure-config

      containers:
      - name: envconsul
        image: gcr.io/${project_id}/envconsul:0.7.0-alpine
        command: ["/bin/sh", "-ecx"]
        args:
        - |
          /usr/bin/curl -v -k \
            --cacert /etc/vault/tls/ca.pem \
            -H "X-Vault-Token: ${vault_token}" \
            --data @/opt/bootstrap/gcp-enable.json \
            "https://vault-cluster:8200/v1/sys/mounts/gcp" \
          && \
          /usr/bin/curl -v -k \
            --cacert /etc/vault/tls/ca.pem \
            -H "X-Vault-Token: ${vault_token}" \
            --data @/opt/bootstrap/gcp-config.json \
            "https://vault-cluster:8200/v1/gcp/config" \
          && \
          sleep 10 \
          && \
          /usr/bin/curl -v -k \
            --cacert /etc/vault/tls/ca.pem \
            -H "X-Vault-Token: ${vault_token}" \
            --data @/opt/bootstrap/terraform-roleset.json \
            https://vault-cluster:8200/v1/gcp/roleset/terraform

        volumeMounts:
        - name: config-volume
          mountPath: /opt/bootstrap
        - name: vault-tls
          mountPath: /etc/vault/tls

      restartPolicy: Never
